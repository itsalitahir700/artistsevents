{"version":3,"sources":["components/Loader/index.js","utilities/constants.js","services/Artist.js","store/actions/Artist.js","components/Search/index.js","components/ArtistCard/index.js","pages/home.js","services/Event.js","store/actions/Events.js","components/EventCard/index.js","pages/events.js","App.js","serviceWorker.js","store/reducers/UIState/Test.js","store/reducers/UIState/index.js","store/reducers/AppState/Artist.js","store/reducers/AppState/Event.js","store/reducers/AppState/index.js","store/reducers/RootReducer.js","store/index.js","index.js"],"names":["Loader","className","Spinner","animation","role","variant","baseUrl","getArtistsByName","artistName","a","axios","get","response","alert","msg","dispatch","getArtistsByNameService","resp","type","payload","data","error","Search","setLoading","useDispatch","useState","setArtistName","fetchData","e","keyCode","localStorage","setItem","target","value","id","onChange","onKeyDown","placeholder","getItem","ArtistCard","artist","history","useHistory","motion","div","initial","x","animate","transition","duration","onClick","push","name","src","thumb_url","alt","facebook_page_url","Home","useSelector","state","AppState","artistState","loading","getEvents","getEnventsService","EventCard","events","length","map","item","eDate","key","venue","country","city","datetime","Date","toLocaleDateString","weekday","year","month","day","timeZone","Events","urlObj","require","parse","document","location","href","query","eventState","handleArtistEvents","useCallback","useEffect","App","exact","path","Boolean","window","hostname","match","test","action","combineReducers","appReducer","UIState","rootReducer","composeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","initialState","createStore","applyMiddleware","thunk","logger","configureStore","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.9df77708.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\nimport \"./Loader.css\";\r\nfunction Loader() {\r\n  return (\r\n    <div className=\"loader\">\r\n      <Spinner animation=\"border\" role=\"status\" variant=\"primary\">\r\n        <span className=\"sr-only\">Loading...</span>\r\n      </Spinner>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Loader;\r\n","const baseUrl = \"https://rest.bandsintown.com/artists/\";\n\nexport { baseUrl };\n","import axios from \"axios\";\r\nimport { baseUrl } from \"../utilities/constants\";\r\n\r\nconst getArtistsByName = async (artistName) => {\r\n  try {\r\n    const response = await axios.get(`${baseUrl + artistName}?app_id=123`);\r\n    return response;\r\n  } catch (error) {\r\n    alert(error.msg);\r\n    return false;\r\n  }\r\n};\r\n\r\nexport { getArtistsByName };\r\n","import { getArtistsByName as getArtistsByNameService } from \"../../services/Artist\";\r\n\r\nexport const getArtistsByName = async (artistName) => async (dispatch) => {\r\n  try {\r\n    const resp = await getArtistsByNameService(artistName);\r\n    dispatch({\r\n      type: \"ARTIST_SUCCESS\",\r\n      payload: resp.data,\r\n    });\r\n    return resp.data;\r\n  } catch (error) {\r\n    dispatch({\r\n      type: \"ARTIST_ERROR\",\r\n      error,\r\n    });\r\n  }\r\n};\r\n\r\nexport default {\r\n  getArtistsByName,\r\n};\r\n","import React, { useState } from \"react\";\nimport \"./Search.css\";\nimport { FaSearch } from \"react-icons/fa\";\nimport { getArtistsByName } from \"../../store/actions/Artist\";\nimport { useDispatch } from \"react-redux\";\n\nfunction Search({ setLoading }) {\n  const dispatch = useDispatch();\n  const [artistName, setArtistName] = useState();\n\n  const fetchData = async (e) => {\n    if (e?.keyCode === 13) {\n      setLoading(true);\n      localStorage.setItem(\"lastSearch\", e.target.value);\n      await dispatch(await getArtistsByName(e.target.value));\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div id=\"custom-search-input col-md-12\">\n      <div className=\"input-group d-flex align-items-center col-md-12\">\n        <input\n          onChange={(e) => setArtistName(e.target.value)}\n          onKeyDown={fetchData}\n          value={artistName || \"\"}\n          type=\"text\"\n          className=\"  search-query form-control\"\n          placeholder=\"Search\"\n        />\n        <span className=\"search-icon\">\n          <FaSearch />\n        </span>\n      </div>\n      <small className=\"last\">\n        {localStorage.getItem(\"lastSearch\")\n          ? `last search : ${localStorage.getItem(\"lastSearch\")} `\n          : null}\n      </small>\n    </div>\n  );\n}\n\nexport default Search;\n","import React from \"react\";\nimport \"./ArtistCard.css\";\nimport { useHistory } from \"react-router-dom\";\nimport { motion } from \"framer-motion\";\n\nfunction ArtistCard({ artist }) {\n  const history = useHistory();\n  return (\n    <motion.div\n      initial={{ x: -300 }}\n      animate={{ x: 0 }}\n      transition={{ duration: 0, type: \"tween\" }}\n      className=\"card card-body\"\n      onClick={() => history.push(`/events?artist=${artist?.name}`)}\n    >\n      <div className=\"d-flex justify-content-between align-items-center\">\n        <div className=\"col-md-4 col-sm-4\">\n          <img className=\"img-artist\" src={artist?.thumb_url} alt=\"artist\" />\n        </div>\n        <div className=\"col-md-8 col-sm-8\">\n          <strong> {artist?.name}</strong>\n          <p className=\"fb-url\">{artist?.facebook_page_url}</p>\n        </div>\n      </div>\n    </motion.div>\n  );\n}\n\nexport default ArtistCard;\n","import React, { useState } from \"react\";\nimport Loader from \"../components/Loader/\";\nimport Search from \"../components/Search\";\nimport ArtistCard from \"../components/ArtistCard\";\nimport { useSelector } from \"react-redux\";\n\nfunction Home() {\n  const artist = useSelector((state) => state.AppState?.artistState);\n  const [loading, setLoading] = useState(false);\n  return (\n    <div className=\"container\">\n      <Search setLoading={setLoading} />\n\n      {loading ? (\n        <Loader />\n      ) : (\n        artist && (\n          <div className=\"col-md-6 mt-4\">\n            <h5>Result found</h5>\n            <ArtistCard artist={artist} />\n          </div>\n        )\n      )}\n    </div>\n  );\n}\n\nexport default Home;\n","import axios from \"axios\";\nimport { baseUrl } from \"../utilities/constants\";\n\nconst getEvents = async (artistName) => {\n  try {\n    const response = await axios.get(\n      `${baseUrl + artistName}/events?app_id=123`\n    );\n    return response;\n  } catch (error) {\n    alert(error.msg);\n    return false;\n  }\n};\n\nexport { getEvents };\n","import { getEvents as getEnventsService } from \"../../services/Event\";\n\nexport const getEvents = async (artistName) => async (dispatch) => {\n  try {\n    const resp = await getEnventsService(artistName);\n    dispatch({\n      type: \"EVENT_SUCCESS\",\n      payload: resp.data,\n    });\n    return resp.data;\n  } catch (error) {\n    dispatch({\n      type: \"EVENT_ERROR\",\n      error,\n    });\n  }\n};\n\nexport default {\n  getEnventsService,\n};\n","import React from \"react\";\nimport \"./EventCard.css\";\n\nfunction EventCard({ events }) {\n  const eventDate = (eDate) => {\n    return new Date(eDate).toLocaleDateString(\"en-US-POSIX\", {\n      weekday: \"long\",\n      year: \"numeric\",\n      month: \"long\",\n      day: \"numeric\",\n      timeZone: \"GMT\",\n    });\n  };\n  return (\n    <div className=\"row\">\n      {events &&\n        events.length &&\n        events.map((item) => (\n          <div className=\"col-md-4 col-sm-6 mt-2\" key={item?.id}>\n            <div className=\"e-card card-body\">\n              <div className=\"heading\">EVENT DETAILS</div>\n              <hr />\n              <div className=\"row\">\n                <div className=\"col-6\">\n                  <div>\n                    <h6>Country</h6>\n                    <p>{item?.venue?.country}</p>\n                  </div>\n                  <div className=\"mt-2\">\n                    <h6>Venue</h6>\n                    <p>{item?.venue?.name}</p>\n                  </div>\n                </div>\n                <div className=\"col-6\">\n                  <div>\n                    <h6>City</h6>\n                    <p>{item?.venue?.city}</p>\n                  </div>\n                  <div className=\"mt-2\">\n                    <h6>Date</h6>\n                    <p>{eventDate(item?.datetime)}</p>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        ))}\n    </div>\n  );\n}\n\nexport default EventCard;\n","import React, { useEffect, useState, useCallback } from \"react\";\nimport ArtistCard from \"../components/ArtistCard\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getEvents } from \"../store/actions/Events\";\nimport { getArtistsByName } from \"../store/actions/Artist\";\nimport EventCard from \"../components/EventCard\";\nimport { IoIosArrowBack } from \"react-icons/io\";\nimport { useHistory } from \"react-router-dom\";\nimport Loader from \"../components/Loader/\";\n\nfunction Events() {\n  const url = require(\"url\");\n  const urlObj = url.parse(document.location.href, true);\n  const artistName = urlObj?.query?.artist;\n\n  const artist = useSelector((state) => state.AppState?.artistState);\n  const events = useSelector((state) => state.AppState?.eventState);\n  const [loading, setLoading] = useState(false);\n\n  const history = useHistory();\n\n  const dispatch = useDispatch();\n\n  const handleArtistEvents = useCallback(async () => {\n    setLoading(true);\n    if (!artist) {\n      dispatch(await getArtistsByName(artistName));\n    }\n    await dispatch(await getEvents(artistName));\n    setLoading(false);\n  }, [artistName, artist, dispatch]);\n\n  useEffect(() => {\n    handleArtistEvents();\n  }, [handleArtistEvents]);\n\n  return (\n    <>\n      <div className=\"col-md-6 mt-4\">\n        <p\n          className=\"pointer d-flex align-items-center\"\n          onClick={() => history.push(\"/\")}\n        >\n          <IoIosArrowBack />\n          Back to results\n        </p>\n        {artist ? <ArtistCard artist={artist} /> : null}\n      </div>\n      {loading ? (\n        <Loader />\n      ) : (\n        <div className=\"col-md-12 mt-4 \">\n          {events && events.length ? (\n            <>\n              <h5>{events.length} Upcoming Events</h5>\n              <EventCard events={events} />\n            </>\n          ) : (\n            \"\"\n          )}\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default Events;\n","import React from \"react\";\r\nimport Home from \"./pages/home\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport Events from \"./pages/events\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"container my-4\">\r\n      <Router>\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Home />\r\n          </Route>\r\n          <Route exact path=\"/events\">\r\n            <Events />\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","const defaultState = null;\r\nconst test = (state = defaultState, action) => {\r\n  switch (action.type) {\r\n    case 'TEST-UI': {\r\n      return action.payload;\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default test;\r\n","import {combineReducers} from 'redux';\r\nimport test from './Test';\r\nexport default combineReducers({\r\n  test,\r\n});\r\n","const defaultState = null;\r\nconst artistState = (state = defaultState, action) => {\r\n  switch (action.type) {\r\n    case \"ARTIST_SUCCESS\": {\r\n      return action.payload;\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default artistState;\r\n","const defaultState = null;\nconst eventState = (state = defaultState, action) => {\n  switch (action.type) {\n    case \"EVENT_SUCCESS\": {\n      return action.payload;\n    }\n    default:\n      return state;\n  }\n};\n\nexport default eventState;\n","import { combineReducers } from \"redux\";\r\nimport artistState from \"./Artist\";\r\nimport eventState from \"./Event\";\r\nexport default combineReducers({\r\n  artistState,\r\n  eventState,\r\n});\r\n","import {combineReducers} from 'redux';\r\nimport UIState from './UIState';\r\nimport AppState from './AppState';\r\n\r\nconst appReducer = combineReducers({\r\n  UIState,\r\n  AppState,\r\n});\r\n\r\nconst rootReducer = (state, action) => {\r\n  return appReducer(state, action);\r\n};\r\n\r\nexport default rootReducer;\r\n","import {createStore, applyMiddleware, compose} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport rootReducer from './reducers/RootReducer';\r\n\r\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport default function configureStore(initialState = {}) {\r\n  return createStore(\r\n    rootReducer,\r\n    initialState,\r\n    composeEnhancer(applyMiddleware(thunk), applyMiddleware(logger)),\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport App from \"./App\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport \"./index.css\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport configureStore from \"./store\";\r\n\r\nconst store = configureStore();\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\nif (module.hot) {\r\n  module.hot.accept(\"./App\", () => {\r\n    ReactDOM.render(\r\n      <Provider store={store}>\r\n        <App />\r\n      </Provider>,\r\n      document.getElementById(\"root\")\r\n    );\r\n  });\r\n}\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}